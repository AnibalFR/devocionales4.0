{
  "permissions": {
    "allow": [
      "Bash(ssh root@64.227.96.34 'curl -s http://localhost:4000/graphql -H \"\"Content-Type: application/json\"\" -d '\"''\"'{\"\"query\"\": \"\"{ miembros { id nombre email usuario { id email rol } } }\"\"}'\"''\"' | python3 -m json.tool')",
      "Bash(ssh root@64.227.96.34 \"PGPASSWORD=''I2xLLTLI2icagcsXO5JsjW4fLmtOWcJ62e4tpPnaSOM='' psql -U devocionales -d devocionales_prod -h localhost -c ''SELECT m.id, m.nombre, m.apellidos, m.email, m.rol, m.activo, u.email as usuario_email FROM miembros m LEFT JOIN usuarios u ON m.\"\"usuarioId\"\" = u.id;''\")",
      "Bash(npm run build)",
      "Bash(node -e \"\nconst typeDefs = require(''./src/schema.ts'').typeDefs || require(''./src/schema'').typeDefs;\nconsole.log(''‚úì Schema GraphQL cargado correctamente'');\n\")",
      "Read(//Users/anibalfigueroaramirez/**)",
      "Bash(git add packages/backend/src/resolvers/index.ts packages/backend/src/resolvers/usuario.resolvers.ts packages/backend/src/schema.ts packages/backend/tsconfig.json packages/web/src/components/Layout.tsx packages/web/src/components/VisitaWizard.tsx packages/web/src/contexts/AuthContext.tsx packages/web/src/pages/BarriosPage.tsx packages/web/src/pages/ExportarImportarPage.tsx packages/web/src/pages/FamiliasPage.tsx packages/web/src/pages/MiembrosPage.tsx packages/web/src/pages/NucleosPage.tsx)",
      "Bash(git commit -m \"$(cat <<''EOF''\nMejora sistema de invitaciones y correcci√≥n de errores TypeScript\n\n## Mejoras de Invitaciones\n- Agrega mutaci√≥n regenerarCredenciales para usuarios existentes\n- Implementa bot√≥n \"Reenviar\" para miembros ya invitados\n- Mejora modal de invitaci√≥n con contexto (nuevo vs regenerar)\n- Soluciona error al intentar reinvitar usuarios\n\n## Backend\n- Nueva mutaci√≥n: regenerarCredenciales (usuario.resolvers.ts)\n- Actualiza schema GraphQL con RegenerarCredencialesInput\n- Corrige errores TypeScript en resolvers/index.ts\n\n## Frontend\n- Bot√≥n din√°mico: \"Invitar\" (azul) vs \"Reenviar\" (verde)\n- Modal contextual seg√∫n estado de usuario\n- Manejo de ambos flujos: crear usuario / regenerar credenciales\n\n## Correcciones TypeScript\n- Configuraci√≥n tsconfig.json (backend)\n- Imports de tipos con ''import type''\n- Correcci√≥n de casts y tipos en m√∫ltiples p√°ginas\n- Eliminaci√≥n de variables no usadas\n- Frontend compila sin errores\n\nü§ñ Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push)",
      "Bash(ssh root@64.227.96.34 'cd /var/www/devocionales4.0 && git pull')",
      "Bash(ssh root@64.227.96.34 'cd /var/www/devocionales4.0 && git stash && git pull')",
      "Bash(ssh root@64.227.96.34 'cd /var/www/devocionales4.0/packages/web && pnpm vite build')",
      "Bash(ssh root@64.227.96.34 'pm2 restart devocionales-api')",
      "Bash(ssh root@64.227.96.34 'pm2 logs devocionales-api --lines 15 --nostream')",
      "Bash(ssh root@64.227.96.34 'curl -s http://localhost:4000/graphql -H \"\"Content-Type: application/json\"\" -d '\"''\"'{\"\"query\"\": \"\"{__typename}\"\"}'\"''\"' | python3 -m json.tool')",
      "Bash(curl -s https://www.registrodevocionales.com/graphql -H \"Content-Type: application/json\" -d '{\"\"\"\"query\"\"\"\": \"\"\"\"{__typename}\"\"\"\"}')",
      "Bash(python3 -m json.tool)",
      "Bash(ssh root@64.227.96.34 'curl -s http://localhost:4000/graphql -H \"\"Content-Type: application/json\"\" -d '\"''\"'{\"\"query\"\": \"\"{ __schema { mutationType { fields { name } } } }\"\"}'\"''\"' | python3 -c \"\"import sys, json; data = json.load(sys.stdin); mutations = [f[\\\"\"name\\\"\"] for f in data[\\\"\"data\\\"\"][\\\"\"__schema\\\"\"][\\\"\"mutationType\\\"\"][\\\"\"fields\\\"\"]]; print(\\\"\"regenerarCredenciales\\\"\" in mutations and \\\"\"‚úì regenerarCredenciales est√° disponible\\\"\" or \\\"\"‚úó regenerarCredenciales NO encontrada\\\"\")\"\"')",
      "Bash(ssh root@64.227.96.34 'curl -s http://localhost:4000/graphql -H \"\"Content-Type: application/json\"\" -d '\"''\"'{\"\"query\"\": \"\"{ __type(name: \\\"\"Mutation\\\"\") { fields { name } } }\"\"}'\"''\"' | python3 -m json.tool | grep -A 2 -B 2 regenerarCredenciales')",
      "Bash(chmod +x deploy.sh)",
      "Bash(./deploy.sh --help)",
      "Bash(git add deploy.sh DEPLOY_README.md)",
      "Bash(git commit -m \"Agrega script automatizado de deployment\n\n- Script deploy.sh con opciones para diferentes escenarios\n- Soporte para migraciones, instalaci√≥n de dependencias, commit autom√°tico\n- Verificaci√≥n de conexi√≥n SSH y estado del servidor\n- Rollback de emergencia\n- Documentaci√≥n completa en DEPLOY_README.md\n\nUso b√°sico:\n  ./deploy.sh                 # Deployment simple\n  ./deploy.sh -c ''mensaje''    # Commit + push + deploy\n  ./deploy.sh -m              # Con migraciones\n  ./deploy.sh -i              # Con instalaci√≥n de dependencias\n  ./deploy.sh -r              # Rollback de emergencia\n\nü§ñ Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(./deploy.sh -v)",
      "Bash(git add WORKFLOW_CLAUDE.md)",
      "Bash(git commit -m \"Agrega workflow est√°ndar para Claude\n\nDocumento que establece el procedimiento que Claude debe seguir para:\n- An√°lisis y planificaci√≥n de cambios\n- Implementaci√≥n correcta\n- Verificaci√≥n y testing\n- Uso del script de deployment\n- Comunicaci√≥n al usuario\n\nIncluye:\n- Checklist pre-deployment\n- Casos especiales (migraciones, dependencias)\n- Template de commits\n- Ejemplo completo de workflow\n- Mejores pr√°cticas\n- Errores comunes a evitar\n\nEsto asegura consistencia en todos los cambios y deployments futuros.\n\nü§ñ Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(./deploy.sh -c \"Agrega rol MCA con permisos de administrador\n\n## Backend\n- Nuevo rol MCA en enum RolUsuario (Prisma y GraphQL)\n- Permisos de administrador iguales a CEA\n- Actualizada l√≥gica de permisos en resolvers:\n  - usuario.resolvers.ts: ver usuarios, crear invitaciones, regenerar credenciales\n  - utils.resolvers.ts: limpiar base de datos\n\n## Frontend  \n- Agregado MCA al array de ROLES\n- Selector de rol en modal de invitaci√≥n incluye MCA\n- Bot√≥n Invitar/Reenviar disponible para usuarios MCA\n- Tipo User actualizado en AuthContext\n\nMCA (Miembro del Comit√© de Agrupaci√≥n) tiene acceso completo igual que CEA.\n\" -m)"
    ],
    "deny": [],
    "ask": []
  }
}
